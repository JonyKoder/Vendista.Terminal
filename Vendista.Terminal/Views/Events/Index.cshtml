@using System.Data
@using Vendista.BL
@using Vendista.BL.Entityes
@model IEnumerable<Vendista.BL.Entityes.itemsEvents>
@inject IDataManager DataManager;
@{
ViewData["Caption"] = "События";
//Layout = null;
}

<style>
    /* Стилизация для кнопок */
    .btn-submit-wrapper {
        text-align: center;
        margin-top: 15px;
    }

    .back {
        padding: 10px 20px;
        background-color: gray;
        color: white;
        border: none;
        border-radius: 5px;
        margin: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    .send {
        padding: 10px 20px;
        background-color: green;
        color: white;
        border: none;
        border-radius: 5px;
        margin: 5px;
        cursor: pointer;
        font-size: 16px;
    }
    /* Стилизация для селекта */
    select {
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f5f5f5;
        font-size: 16px;
        width: 200px;
        margin-top: 20px;
    }

    /* Стилизация для опций */
    select option {
        background-color: white;
        color: #333;
    }

    /* Стилизация для выбранного опций */
    select option:checked {
        background-color: #007bff;
        color: white;
    }
</style>
<div class="catalog">
    <div class="catalog__head">


        <div class="box catalog__head-row">
         
        </div>
        <div class="box catalog__head-row">
            <span class="catalog__label">Автомат:</span>
            <select class="select_terminal">
                @{
                    var machines = await DataManager.GetItems<RootObject>("machines");
                }
                <option value="">Не выбрано</option>
                @foreach (var term in machines.items)
                {
                    <option value="@term.terminal_id" >@term.name</option>
                }
            </select>
            <div class="box catalog__head-row" >
                <span class="catalog__label">Комманда:</span>
                <select id="command_select">
                    @{
                        var commandType = await DataManager.GetItems<CommandModel>("commands/types");
                    }

                    <option>Не выбрано</option>
                    @foreach (var command in @commandType.items)
                    {
                        <option value="@command.id">@command.name</option>
                    }
                </select>
            </div>
            <hr/>
            <hr/>
            <div class="btn-submit-wrapper">
                <button class="back">Назад</button>
                <button class="send">Отправить</button>
            </div>
           


        </div>
        }
    </div>
    @{double summa = 0;}
    <div class="catalog__body">
        <div class="table-wrapper">
            <table class="catalog__table">
                <thead>
                <tr>
                    <th class="" data-column="0" width="60">№</th>
                    <th class="sort" data-column="1" width="110">Дата <br>и время</th>
                    <th class="sort" data-column="2" width="400">Автомат</th>
                    <th class="sort" data-column="3" width="110">Событие</th>
                    <th class="sort" data-column="4" width="90">Товар</th>
                    <th class="sort" data-column="5" width="90">Сумма</th>
                </tr>
                </thead>
                <tbody>
                @if (Model != null)
                {
                int i = 0;

                foreach (var eventResults in Model)
                {
                i++;
                summa += eventResults.sum / 100;
                var img_name = "";
                switch (eventResults.machine_id)
                {
                //Нал
                case 101:
                img_name = "coins.svg";
                break;
                //Безнал
                case 102:
                //Попытка безнал
                case 199:
                img_name = "card.svg";
                break;
                case 1:
                case 3:
                img_name = "notice.svg";
                break;
                }
                <tr>
                    <td>@i</td>
                    <td>
                        @($"{eventResults.date.Split(" ")[0]}") 
                        <br /> 
                         <small>@($"{eventResults.date.Split(" ")[1]}")</small> 
                    </td>
                    <td>
                        <p>@eventResults.machine_name</p>
                        <p><small><em>@eventResults.machine_address</em></small></p>
                        <p><small>@eventResults.machine_model</small></p>
                    </td>
                    <td>
                        <img src="~/images/@img_name" alt="" />
                        <small>@eventResults.event_name</small>
                    </td>
                    <td><small>@eventResults.product_name</small></td>
                    <td>@($"{eventResults.sum/100} руб.")</td>
                </tr>
                }
                }

                </tbody>
                <tfoot>
                <tr>
                    <td colspan="5">Итого:</td>
                    <td>@($"{summa:0.00} руб.")</td>
                </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(".send").click(function (e){
            e.preventDefault();

            var id = $('.select_terminal').val();

                $.ajax({
                    type: 'POST',
                    url: '/sendCommand',
                    data: { id: id },
                    success: function(response) {
                        alert('Команда успешно отправлена!');
                    },
                    error: function(xhr, textStatus, error) {
                        alert('Произошла ошибка при отправке команды: ' + error);
                    }
                });
        });

        $(document).on('click ', function (e) {
        if ($('.nav_menu').css('display') == 'block' && $($(e.target).parent()).attr('class') != 'open_menu_mob' && $(window).width() < 993) {
            $('.nav_menu').fadeOut();
        }
    });
    $('.open_menu_mob').on('click', function () {
        $('.nav_menu').fadeIn();
    });
    $(function () {
        let Order_num = $("#Order_num").val();
        let Order_direction = $("#Order_direction").val();

        $('[data-column=' + Order_num + ']').addClass(Order_direction > 0 ? 'sort-up' : 'sort-down');

        $('.sort').on('click', function () {
            $("#Order_num").val($(this).data('column'));

            if ($(this).attr('class') == "sort") {
                $("#Order_direction").val('-1');
            } else {
                if ($(this).hasClass('sort-up')) {
                    $("#Order_direction").val('-1');
                } else {
                    $("#Order_direction").val('1');
                }
            }
            $('#filterr').submit();
        });
    });
    $('.add_item').on('click', function (e) {
        e.preventDefault(); // этот код предотвращает стандартное поведение браузера по клику
        $('.action_name').val($(this).data('action'));
        $('#filterr_action').submit();
    });
    $('.edit_item').on('click', function () {
        $('.id_action').val($(this).data('id'));
        $('.name_action').val($(this).data('name'));
        $('.action_name').val($(this).data('action'));
        $('#filterr_action').submit();
    });
    $('.delete_item').on('click', function () {
        $('#filterr_delete').find('.id_action_del').val($(this).data('id'));
        $('.edite_add_block').fadeIn();
    });
    $('.delete_item_ok').on('click', function () {
        $('#filterr_delete').submit();
        $('.edite_add_block').fadeOut();
    });
    $('.btn.catalog__btn.gray').on('click', function (e) {
        e.preventDefault(); // этот код предотвращает стандартное поведение браузера по клику
        if ($('.del_formm').css('display') == 'block') {
            $('.edite_add_block').fadeOut();
        } else {
            location.href = window.location.href;
        }
    });

    $('.page_table').on('click', function () {
        var page = $(this).data('page');
        $('.page_table.active').removeClass('active');
        $(this).addClass('active');
        $('.active_list').removeClass('active_list');
        $('[data-list=' + page + ']').addClass('active_list');
        $("body,html").animate({
            scrollTop: 0
        }, 800);
    });

    </script>

}


